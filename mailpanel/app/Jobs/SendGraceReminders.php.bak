<?php

namespace App\Jobs;

use Illuminate\Bus\Queueable;
use Illuminate\Contracts\Queue\ShouldQueue;
use Illuminate\Foundation\Bus\Dispatchable;
use Illuminate\Queue\InteractsWithQueue;
use Illuminate\Queue\SerializesModels;
use Illuminate\Support\Facades\Mail;
use App\Models\Subscription;
use App\Mail\GraceReminder;

class SendGraceReminders implements ShouldQueue
{
    use Dispatchable, InteractsWithQueue, Queueable, SerializesModels;

    /** @var int Días antes de que termine la prórroga */
    protected int $daysBefore;

    /**
     * @param int $daysBefore Días antes de que termine la prórroga
     */
    public function __construct(int $daysBefore)
    {
        $this->daysBefore = $daysBefore;
    }

    /**
     * Ejecuta el job.
     */
    public function handle(): void
    {
        $today     = now();
        $threshold = $today->copy()->addDays($this->daysBefore);

        $subs = Subscription::whereNotNull('grace_until')
            ->whereBetween('grace_until', [$today, $threshold])
            ->get();

        foreach ($subs as $sub) {
            // Monta el array de destinatarios, filtrando los nulos
            $to = array_filter([
                'admin@' . $sub->domain,
                $sub->contact_email,
                'soporte@connectia.info',
            ]);

            // Encola el correo a TODOS los válidos
            Mail::to($to)
                ->queue(new GraceReminder($sub, $this->daysBefore));
        }
    }

}
