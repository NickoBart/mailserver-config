<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Notifications\Notifiable;
use Laravel\Sanctum\HasApiTokens;
use App\Models\Client;
use App\Models\ClientDomain;

class User extends Authenticatable
{
    use HasApiTokens, HasFactory, Notifiable;

    /**
     * The attributes that are mass assignable.
     *
     * @var array<int, string>
     */
    protected $fillable = [
        'name',
        'email',
        'password',
    ];

    /**
     * The attributes that should be hidden for serialization.
     *
     * @var array<int, string>
     */
    protected $hidden = [
        'password',
        'remember_token',
    ];

    /**
     * The attributes that should be cast.
     *
     * @var array<string, string>
     */
    protected $casts = [
        'email_verified_at' => 'datetime',
        'password'          => 'hashed',
    ];

    /**
     * Relación 1:1 con Client, usando el mismo email.
     */
    public function client()
    {
        return $this->hasOne(Client::class, 'email', 'email');
    }

    /**
     * Todos los dominios de ese cliente, a través de hasManyThrough.
     */
    public function domains()
    {
        return $this->hasManyThrough(
            ClientDomain::class,  // Modelo final
            Client::class,        // Modelo intermedio
            'email',              // FK en clients: clients.email ← users.email
            'client_id',          // FK en client_domains: client_domains.client_id ← clients.id
            'email',              // PK local: users.email
            'id'                  // PK intermedio: clients.id
        );
    }
}
